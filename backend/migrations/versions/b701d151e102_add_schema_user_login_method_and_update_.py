"""Add schema user login method and update user table

Revision ID: b701d151e102
Revises: 0fd45c2831ba
Create Date: 2025-01-23 19:11:01.346220

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel             # NEW
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'b701d151e102'
down_revision: Union[str, None] = '0fd45c2831ba'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('login_methods',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('method_name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('user_created', sa.String(length=255), nullable=True),
    sa.Column('user_updated', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_login_methods')),
    sa.UniqueConstraint('method_name', name=op.f('uq_login_methods_method_name'))
    )
    op.create_table('user_social_logins',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('login_method_id', sa.UUID(), nullable=False),
    sa.Column('provider_user_id', sa.String(length=255), nullable=False),
    sa.Column('access_token', sa.Text(), nullable=True),
    sa.Column('refresh_token', sa.Text(), nullable=True),
    sa.Column('expires_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('linked_at', sa.TIMESTAMP(), server_default=sa.text('now()'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('user_created', sa.String(length=255), nullable=True),
    sa.Column('user_updated', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['login_method_id'], ['login_methods.id'], name=op.f('fk_user_social_logins_login_method_id_login_methods'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_user_social_logins_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_user_social_logins')),
    sa.UniqueConstraint('login_method_id', 'provider_user_id', name='unique_provider_user_id')
    )
    op.add_column('users', sa.Column('password_hash', sa.Text(), nullable=False))
    op.add_column('users', sa.Column('user_name', sa.String(length=255), nullable=True))
    op.add_column('users', sa.Column('status', sa.String(length=50), nullable=True))
    op.add_column('users', sa.Column('is_email_verified', sa.Boolean(), nullable=False))
    op.add_column('users', sa.Column('verification_token', sa.UUID(), nullable=False))
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.TIMESTAMP(),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('users', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               type_=sa.TIMESTAMP(),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_column('users', 'username')
    op.drop_column('users', 'hashed_password')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('hashed_password', sa.TEXT(), autoincrement=False, nullable=False))
    op.add_column('users', sa.Column('username', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.alter_column('users', 'updated_at',
               existing_type=sa.TIMESTAMP(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('users', 'created_at',
               existing_type=sa.TIMESTAMP(),
               type_=postgresql.TIMESTAMP(timezone=True),
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_column('users', 'verification_token')
    op.drop_column('users', 'is_email_verified')
    op.drop_column('users', 'status')
    op.drop_column('users', 'user_name')
    op.drop_column('users', 'password_hash')
    op.drop_table('user_social_logins')
    op.drop_table('login_methods')
    # ### end Alembic commands ###
